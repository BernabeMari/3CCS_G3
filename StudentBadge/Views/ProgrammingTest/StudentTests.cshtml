@model List<StudentBadge.Models.ProgrammingTest>
@{
    Layout = null;
    int yearLevel = ViewBag.StudentYearLevel;
    string studentId = ViewBag.StudentId;
    List<int> completedTestIds = ViewBag.CompletedTestIds ?? new List<int>();
    Dictionary<int, StudentBadge.Models.TestScore> completedTestScores = ViewBag.CompletedTestScores ?? new Dictionary<int, StudentBadge.Models.TestScore>();
    string yearName = "";
    
    // Add variable to check if student is a graduate
    bool isGraduate = yearLevel == 5;
    
    switch (yearLevel)
    {
        case 1: yearName = "1st Year"; break;
        case 2: yearName = "2nd Year"; break;
        case 3: yearName = "3rd Year"; break;
        case 4: yearName = "4th Year"; break;
        case 5: yearName = "Graduate"; break;
        default: yearName = "Unknown"; break;
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Programming Tests - Student Portal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    
    <style>
        body {
            margin: 0;
            font-family: 'Inter', sans-serif;
            height: 100vh;
            background: #fff6f1;
            display: flex;
            overflow: hidden;
        }

        .dashboard-container {
            display: flex;
            width: 100%;
            overflow: hidden;
        }

        /* Sidebar styles */
        .sidebar {
            width: 210px !important;
            background: linear-gradient(180deg, #8A2BE2, #7B1FA2);
            padding: 25px 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            box-shadow: 5px 0 15px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            overflow-y: auto;
            z-index: 100;
        }

        .logo {
            text-align: center;
            margin-bottom: 40px;
        }

     .logo img {
            width: 150px;
            transition: transform 0.3s ease;
        }
        
        .logo img:hover {
            transform: scale(1.05);
        }

        .logo h2 {
            font-size: 22px;
            font-weight: 700;
            margin: 10px 0 5px;
            color: #fff;
        }

        .logo p {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: rgba(255, 255, 255, 0.85);
            font-size: 16px;
            font-weight: 600;
            padding: 12px 20px;
            margin: 8px 0;
            border-radius: 12px;
            width: 100%;
            transition: all 0.3s ease;
        }

        .sidebar-link i {
            margin-right: 12px;
            font-size: 18px;
        }

        .sidebar-link.active {
            background: #fff6f1;
            font-weight: bold;
                color: #8a2be2;
            box-shadow: inset 3px 3px 8px rgba(0, 0, 0, 0.05);
        }

        .sidebar-link:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.02);
            color: #fff;
        }

        .content {
            flex-grow: 1;
            padding: 25px;
            width: calc(100% - 240px);
            margin-left: 240px;
            max-height: 100vh;
            overflow-y: auto;
        }

        .content h1 {
            font-size: 24px;
            font-weight: 700;
                color: #8a2be2;
            margin-top: 0;
            margin-bottom: 15px;
        }

        .btn-primary {
            background-color: #8a2be2;
            border-color: #8a2be2;
        }

        .btn-primary:hover {
                background-color: #8a2be2;
                border-color: #8a2be2;
        }

        .card {
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            overflow: hidden;
            border: none;
        }

        .card-header {
            background-color: #fff;
            border-bottom: 1px solid #f0f0f0;
            padding: 15px 20px;
        }

        .card-body {
            padding: 20px;
        }

        .badge {
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 20px;
        }

        .badge-info {
            background-color: #3498db;
        }

        .badge-success {
            background-color: #2ecc71;
        }

        .badge-warning {
            background-color: #f1c40f;
            color: #000;
        }

        .badge-danger {
            background-color: #e74c3c;
        }

        .badge-secondary {
            background-color: #7f8c8d;
        }

        .year-level-badge {
            display: inline-block;
            padding: 6px 12px;
            background: #8a2be2;
            color: white;
            border-radius: 20px;
            font-weight: 600;
            font-size: 14px;
            margin-left: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .programming-language-icon {
            width: 24px;
            height: 24px;
            margin-right: 5px;
        }

        .test-card {
            transition: all 0.3s ease;
            border-left: 4px solid #8a2be2;
        }

        .test-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .test-info {
            margin-top: 15px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .test-info-item {
            font-size: 14px;
            color: #555;
            display: flex;
            align-items: center;
        }

        .test-info-item i {
            margin-right: 5px;
                color: #8a2be2;
        }

        .test-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }

        .empty-state i {
            font-size: 48px;
            color: #e0e0e0;
            margin-bottom: 15px;
        }

        .empty-state h3 {
            font-size: 18px;
            color: #555;
            margin-bottom: 10px;
        }

        .empty-state p {
            color: #888;
            margin-bottom: 20px;
        }

        .completed-test {
            border-left-color: #28a745;
            background-color: #f8f9fa;
            opacity: 0.85;
        }
        
        .completed-test .card-title {
            color: #6c757d;
        }

        .completed-test:hover {
            transform: none;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="logo">
                <img src="~/images/student1.png" alt="EduBadge Logo">
                <h2>EduBadge</h2>
                <p>Student Portal</p>
            </div>
            <nav>
                <a href="/Dashboard/StudentDashboard" class="sidebar-link">
                    <i class="fas fa-th-large"></i> Dashboard
                </a>
                <a href="/Dashboard/StudentProfile" class="sidebar-link">
                    <i class="fas fa-user"></i> Profile
                </a>
                @if (!isGraduate)
                {
                    <a href="/ProgrammingTest/AvailableTests" class="sidebar-link">
                        <i class="fas fa-tasks"></i> Available Tests
                    </a>
                }
                else
                {
                    <span class="sidebar-link disabled" style="opacity: 0.5; cursor: not-allowed;">
                        <i class="fas fa-tasks"></i> Available Tests (Graduate)
                    </span>
                }
                <a href="/ProgrammingTest/StudentTests" class="sidebar-link active">
                    <i class="fas fa-code"></i> Completed Tests
                </a>
                @if (!isGraduate)
                {
                    <a href="/Challenge/AvailableChallenges" class="sidebar-link">
                        <i class="fas fa-trophy"></i> Challenges
                    </a>
                }
                else
                {
                    <span class="sidebar-link disabled" style="opacity: 0.5; cursor: not-allowed;">
                        <i class="fas fa-trophy"></i> Challenges (Graduate)
                    </span>
                }
                <a href="/Challenge/CompletedChallenges" class="sidebar-link">
                    <i class="fas fa-check-circle"></i> Completed Challenges
                </a>
                <a href="/ProgrammingTest/Certificates" class="sidebar-link">
                    <i class="fas fa-award"></i> My Certificates
                </a>
                <a href="/Home/Login" class="sidebar-link">
                    <i class="fas fa-sign-out-alt"></i> Log Out
                </a>
            </nav>
        </aside>
        
        <!-- Main Content -->
        <div class="content">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Completed Tests <span class="year-level-badge"><i class="fas fa-graduation-cap me-2"></i>@yearName</span></h1>
                <span class="text-muted"><i class="fas fa-info-circle me-1"></i> Showing all completed tests from all year levels</span>
            </div>
            
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            
            @if (Model != null && Model.Any())
            {
                <div class="row">
                    @foreach (var test in Model)
                    {
                        var score = completedTestScores[test.TestId];
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card test-card completed-test">
                                <div class="card-body">
                                    <h5 class="card-title">
                                        @test.TestName
                                        <span class="badge bg-success ms-2">
                                            <i class="fas fa-check-circle"></i> Completed
                                        </span>
                                    </h5>
                                    <span class="badge bg-@GetLanguageBadgeColor(test.ProgrammingLanguage)">
                                        <i class="@GetLanguageIcon(test.ProgrammingLanguage)"></i> @test.ProgrammingLanguage
                                    </span>
                                    
                                    <p class="card-text mt-2">
                                        @(string.IsNullOrEmpty(test.Description) ? "No description" : 
                                            (test.Description.Length > 100 ? test.Description.Substring(0, 100) + "..." : test.Description))
                                    </p>
                                    
                                    <div class="test-info">
                                        <div class="test-info-item">
                                            <i class="fas fa-question-circle"></i> @(test.Questions?.Count ?? 0) Questions
                                        </div>
                                        <div class="test-info-item">
                                            <i class="fas fa-calendar-alt"></i> @test.CreatedDate.ToString("MMM dd, yyyy")
                                        </div>
                                        <div class="test-info-item">
                                            <i class="fas fa-layer-group"></i> Year Level: @test.YearLevel
                                        </div>
                                    </div>
                                    
                                    <div class="test-actions">
                                        <div class="test-score me-auto">
                                            <span class="badge bg-light text-dark border">
                                                <i class="fas fa-star text-warning me-1"></i> Score: 
                                                <strong>@score.EarnedPoints/@score.TotalPoints</strong>
                                                <span class="ms-1">(@score.Percentage%)</span>
                                            </span>
                                        </div>
                                        <button class="btn btn-secondary" disabled>
                                            <i class="fas fa-check-circle"></i> Test Completed
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-code"></i>
                    <h3>No Completed Tests</h3>
                    <p>You haven't completed any programming tests yet. Visit the "Available Tests" section to find tests you can take.</p>
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Auto-dismiss alerts after 5 seconds
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        });
    </script>
</body>
</html>

@functions {
    private string GetLanguageBadgeColor(string language)
    {
        switch (language?.ToLower())
        {
            case "visual basic":
                return "secondary";
            case "html/css":
                return "danger";
            case "python":
                return "primary";
            case "javascript":
                return "warning";
            case "php":
                return "info";
            case "c":
                return "dark";
            case "c#":
                return "success";
            default:
                return "secondary";
        }
    }
    
    private string GetLanguageIcon(string language)
    {
        switch (language?.ToLower())
        {
            case "visual basic":
                return "fab fa-microsoft";
            case "html/css":
                return "fab fa-html5";
            case "python":
                return "fab fa-python";
            case "javascript":
                return "fab fa-js";
            case "php":
                return "fab fa-php";
            case "c":
                return "fas fa-code";
            case "c#":
                return "fab fa-microsoft";
            default:
                return "fas fa-code";
        }
    }
} 