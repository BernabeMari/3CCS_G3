@model List<StudentBadge.Models.ProgrammingTest>
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Programming Tests - Teacher Portal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    
    <style>
        body {
            margin: 0;
            font-family: 'Inter', sans-serif;
            height: 100vh;
            background: #fff6f1;
            display: flex;
            overflow: hidden;
        }

        .dashboard-container {
            display: flex;
            width: 100%;
            overflow: hidden;
        }

        /* Sidebar styles */
        .sidebar {
            width: 210px !important;
            background: linear-gradient(180deg, #8A2BE2, #7B1FA2);
            padding: 25px 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            box-shadow: 5px 0 15px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            overflow-y: auto;
            z-index: 100;
        }

        .logo {
            text-align: center;
            margin-bottom: 40px;
        }

       .logo img {
            width: 150px;
            transition: transform 0.3s ease;
        }
        
        .logo img:hover {
            transform: scale(1.05);
        }

        .logo h2 {
            font-size: 22px;
            font-weight: 700;
            margin: 10px 0 5px;
            color: #fff;
        }

        .logo p {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: rgba(255, 255, 255, 0.85);
            font-size: 16px;
            font-weight: 600;
            padding: 12px 20px;
            margin: 8px 0;
            border-radius: 12px;
            width: 100%;
            transition: all 0.3s ease;
        }

        .sidebar-link i {
            margin-right: 12px;
            font-size: 18px;
        }

        .sidebar-link.active {
            background: #fff6f1;
            font-weight: bold;
                color: #8a2be2;
            box-shadow: inset 3px 3px 8px rgba(0, 0, 0, 0.05);
        }

        .sidebar-link:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.02);
            color: #fff;
        }

        .content {
            flex-grow: 1;
            padding: 25px;
            width: calc(100% - 240px);
            margin-left: 240px;
            max-height: 100vh;
            overflow-y: auto;
        }

        .content h1 {
            font-size: 24px;
            font-weight: 700;
                color: #8a2be2;
            margin-top: 0;
            margin-bottom: 15px;
        }

        .btn-primary {
            background-color: #8a2be2;
            border-color: #8a2be2;
        }

        .btn-primary:hover {
                background-color: #8a2be2;
                border-color: #8a2be2;
        }

        .card {
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            overflow: hidden;
            border: none;
        }

        .card-header {
            background-color: #fff;
            border-bottom: 1px solid #f0f0f0;
            padding: 15px 20px;
        }

        .card-body {
            padding: 20px;
        }

        .badge {
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 20px;
        }

        .badge-info {
            background-color: #3498db;
        }

        .badge-success {
            background-color: #2ecc71;
        }

        .badge-warning {
            background-color: #f1c40f;
            color: #000;
        }

        .badge-danger {
            background-color: #e74c3c;
        }

        .badge-secondary {
            background-color: #7f8c8d;
        }

        .programming-language-icon {
            width: 24px;
            height: 24px;
            margin-right: 5px;
        }

        .test-card {
            transition: all 0.3s ease;
            border-left: 4px solid #8a2be2;
        }

        .test-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .test-info {
            margin-top: 15px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .test-info-item {
            font-size: 14px;
            color: #555;
            display: flex;
            align-items: center;
        }

        .test-info-item i {
            margin-right: 5px;
                color: #8a2be2;
        }

        .test-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }

        .empty-state i {
            font-size: 48px;
            color: #e0e0e0;
            margin-bottom: 15px;
        }

        .empty-state h3 {
            font-size: 18px;
            color: #555;
            margin-bottom: 10px;
        }

        .empty-state p {
            color: #888;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <img src="~/images/student1.png" alt="School Logo" style="width: 80px; height: auto;">
                <h2>EduBadge</h2>
                <p>Teacher Portal</p>
            </div>
            
           <a href="/Teacher/Dashboard" class="sidebar-link" data-tab="dashboard">
                <i class="fas fa-th-large"></i> Dashboard
            </a>
            <a href="#" class="sidebar-link active">
                <i class="fas fa-code"></i> Programming Tests
            </a>
            
            <a href="/Challenge/Index" class="sidebar-link">
                <i class="fas fa-trophy"></i> Challenges
            </a>
            <a href="/PendingCertificates" class="sidebar-link">
                <i class="fas fa-certificate"></i> Verify Certificates
            </a>
            
            <a href="#" class="sidebar-link" onclick="window.location.href='/Home/Login'; return false;">
                <i class="fas fa-sign-out-alt"></i> Log Out
            </a>
        </div>
        
        
        <!-- Main Content -->
        <div class="content">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Programming Tests</h1>
                <a href="/ProgrammingTest/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create New Test
                </a>
            </div>
            
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            
            @if (Model != null && Model.Any())
            {
                <!-- Year Level Tabs -->
                <ul class="nav nav-tabs mb-4" id="yearLevelTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="year1-tab" data-bs-toggle="tab" data-bs-target="#year1" type="button" role="tab" aria-controls="year1" aria-selected="true">
                            <i class="fas fa-graduation-cap"></i> 1st Year
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="year2-tab" data-bs-toggle="tab" data-bs-target="#year2" type="button" role="tab" aria-controls="year2" aria-selected="false">
                            <i class="fas fa-graduation-cap"></i> 2nd Year
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="year3-tab" data-bs-toggle="tab" data-bs-target="#year3" type="button" role="tab" aria-controls="year3" aria-selected="false">
                            <i class="fas fa-graduation-cap"></i> 3rd Year
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="year4-tab" data-bs-toggle="tab" data-bs-target="#year4" type="button" role="tab" aria-controls="year4" aria-selected="false">
                            <i class="fas fa-graduation-cap"></i> 4th Year
                        </button>
                    </li>
                </ul>
                
                <!-- Tab Content -->
                <div class="tab-content" id="yearLevelTabContent">
                    <!-- 1st Year Tab -->
                    <div class="tab-pane fade show active" id="year1" role="tabpanel" aria-labelledby="year1-tab">
                        @{
                            var year1Tests = Model.Where(t => t.YearLevel == 1).ToList();
                            if (year1Tests.Any())
                            {
                                <div class="row">
                                    @foreach (var test in year1Tests)
                                    {
                                        <div class="col-md-6 col-lg-4 mb-4">
                                            <div class="card test-card">
                                                <div class="card-body">
                                                    <h5 class="card-title">@test.TestName</h5>
                                                    <span class="badge bg-@GetLanguageBadgeColor(test.ProgrammingLanguage)">
                                                        <i class="@GetLanguageIcon(test.ProgrammingLanguage)"></i> @test.ProgrammingLanguage
                                                    </span>
                                                    
                                                    <p class="card-text mt-2">
                                                        @(string.IsNullOrEmpty(test.Description) ? "No description" : 
                                                            (test.Description.Length > 100 ? test.Description.Substring(0, 100) + "..." : test.Description))
                                                    </p>
                                                    
                                                    <div class="test-info">
                                                        <div class="test-info-item">
                                                            <i class="fas fa-question-circle"></i> @(test.Questions?.Count ?? 0) Questions
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-calendar-alt"></i> @test.CreatedDate.ToString("MMM dd, yyyy")
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-toggle-on"></i> @(test.IsActive ? "Active" : "Inactive")
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="test-actions">
                                                        <a href="/ProgrammingTest/Edit/@test.TestId" class="btn btn-outline-primary btn-sm">
                                                            <i class="fas fa-edit"></i> Edit
                                                        </a>
                                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                                data-bs-toggle="modal" data-bs-target="#deleteModal" 
                                                                data-test-id="@test.TestId" data-test-name="@test.TestName">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="empty-state">
                                    <i class="fas fa-graduation-cap"></i>
                                    <h3>No 1st Year Programming Tests</h3>
                                    <p>Create a programming test for 1st year students.</p>
                                    <a href="/ProgrammingTest/Create" class="btn btn-primary">
                                        <i class="fas fa-plus"></i> Create New Test
                                    </a>
                                </div>
                            }
                        }
                    </div>
                    
                    <!-- 2nd Year Tab -->
                    <div class="tab-pane fade" id="year2" role="tabpanel" aria-labelledby="year2-tab">
                        @{
                            var year2Tests = Model.Where(t => t.YearLevel == 2).ToList();
                            if (year2Tests.Any())
                            {
                                <div class="row">
                                    @foreach (var test in year2Tests)
                                    {
                                        <div class="col-md-6 col-lg-4 mb-4">
                                            <div class="card test-card">
                                                <div class="card-body">
                                                    <h5 class="card-title">@test.TestName</h5>
                                                    <span class="badge bg-@GetLanguageBadgeColor(test.ProgrammingLanguage)">
                                                        <i class="@GetLanguageIcon(test.ProgrammingLanguage)"></i> @test.ProgrammingLanguage
                                                    </span>
                                                    
                                                    <p class="card-text mt-2">
                                                        @(string.IsNullOrEmpty(test.Description) ? "No description" : 
                                                            (test.Description.Length > 100 ? test.Description.Substring(0, 100) + "..." : test.Description))
                                                    </p>
                                                    
                                                    <div class="test-info">
                                                        <div class="test-info-item">
                                                            <i class="fas fa-question-circle"></i> @(test.Questions?.Count ?? 0) Questions
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-calendar-alt"></i> @test.CreatedDate.ToString("MMM dd, yyyy")
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-toggle-on"></i> @(test.IsActive ? "Active" : "Inactive")
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="test-actions">
                                                        <a href="/ProgrammingTest/Edit/@test.TestId" class="btn btn-outline-primary btn-sm">
                                                            <i class="fas fa-edit"></i> Edit
                                                        </a>
                                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                                data-bs-toggle="modal" data-bs-target="#deleteModal" 
                                                                data-test-id="@test.TestId" data-test-name="@test.TestName">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="empty-state">
                                    <i class="fas fa-graduation-cap"></i>
                                    <h3>No 2nd Year Programming Tests</h3>
                                    <p>Create a programming test for 2nd year students.</p>
                                    <a href="/ProgrammingTest/Create" class="btn btn-primary">
                                        <i class="fas fa-plus"></i> Create New Test
                                    </a>
                                </div>
                            }
                        }
                    </div>
                    
                    <!-- 3rd Year Tab -->
                    <div class="tab-pane fade" id="year3" role="tabpanel" aria-labelledby="year3-tab">
                        @{
                            var year3Tests = Model.Where(t => t.YearLevel == 3).ToList();
                            if (year3Tests.Any())
                            {
                                <div class="row">
                                    @foreach (var test in year3Tests)
                                    {
                                        <div class="col-md-6 col-lg-4 mb-4">
                                            <div class="card test-card">
                                                <div class="card-body">
                                                    <h5 class="card-title">@test.TestName</h5>
                                                    <span class="badge bg-@GetLanguageBadgeColor(test.ProgrammingLanguage)">
                                                        <i class="@GetLanguageIcon(test.ProgrammingLanguage)"></i> @test.ProgrammingLanguage
                                                    </span>
                                                    
                                                    <p class="card-text mt-2">
                                                        @(string.IsNullOrEmpty(test.Description) ? "No description" : 
                                                            (test.Description.Length > 100 ? test.Description.Substring(0, 100) + "..." : test.Description))
                                                    </p>
                                                    
                                                    <div class="test-info">
                                                        <div class="test-info-item">
                                                            <i class="fas fa-question-circle"></i> @(test.Questions?.Count ?? 0) Questions
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-calendar-alt"></i> @test.CreatedDate.ToString("MMM dd, yyyy")
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-toggle-on"></i> @(test.IsActive ? "Active" : "Inactive")
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="test-actions">
                                                        <a href="/ProgrammingTest/Edit/@test.TestId" class="btn btn-outline-primary btn-sm">
                                                            <i class="fas fa-edit"></i> Edit
                                                        </a>
                                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                                data-bs-toggle="modal" data-bs-target="#deleteModal" 
                                                                data-test-id="@test.TestId" data-test-name="@test.TestName">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="empty-state">
                                    <i class="fas fa-graduation-cap"></i>
                                    <h3>No 3rd Year Programming Tests</h3>
                                    <p>Create a programming test for 3rd year students.</p>
                                    <a href="/ProgrammingTest/Create" class="btn btn-primary">
                                        <i class="fas fa-plus"></i> Create New Test
                                    </a>
                                </div>
                            }
                        }
                    </div>
                    
                    <!-- 4th Year Tab -->
                    <div class="tab-pane fade" id="year4" role="tabpanel" aria-labelledby="year4-tab">
                        @{
                            var year4Tests = Model.Where(t => t.YearLevel == 4).ToList();
                            if (year4Tests.Any())
                            {
                                <div class="row">
                                    @foreach (var test in year4Tests)
                                    {
                                        <div class="col-md-6 col-lg-4 mb-4">
                                            <div class="card test-card">
                                                <div class="card-body">
                                                    <h5 class="card-title">@test.TestName</h5>
                                                    <span class="badge bg-@GetLanguageBadgeColor(test.ProgrammingLanguage)">
                                                        <i class="@GetLanguageIcon(test.ProgrammingLanguage)"></i> @test.ProgrammingLanguage
                                                    </span>
                                                    
                                                    <p class="card-text mt-2">
                                                        @(string.IsNullOrEmpty(test.Description) ? "No description" : 
                                                            (test.Description.Length > 100 ? test.Description.Substring(0, 100) + "..." : test.Description))
                                                    </p>
                                                    
                                                    <div class="test-info">
                                                        <div class="test-info-item">
                                                            <i class="fas fa-question-circle"></i> @(test.Questions?.Count ?? 0) Questions
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-calendar-alt"></i> @test.CreatedDate.ToString("MMM dd, yyyy")
                                                        </div>
                                                        <div class="test-info-item">
                                                            <i class="fas fa-toggle-on"></i> @(test.IsActive ? "Active" : "Inactive")
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="test-actions">
                                                        <a href="/ProgrammingTest/Edit/@test.TestId" class="btn btn-outline-primary btn-sm">
                                                            <i class="fas fa-edit"></i> Edit
                                                        </a>
                                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                                data-bs-toggle="modal" data-bs-target="#deleteModal" 
                                                                data-test-id="@test.TestId" data-test-name="@test.TestName">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="empty-state">
                                    <i class="fas fa-graduation-cap"></i>
                                    <h3>No 4th Year Programming Tests</h3>
                                    <p>Create a programming test for 4th year students.</p>
                                    <a href="/ProgrammingTest/Create" class="btn btn-primary">
                                        <i class="fas fa-plus"></i> Create New Test
                                    </a>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-code"></i>
                    <h3>No Programming Tests Yet</h3>
                    <p>Create your first programming test for students.</p>
                    <a href="/ProgrammingTest/Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create New Test
                    </a>
                </div>
            }
        </div>
    </div>
    
    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the test "<span id="testNameToDelete"></span>"? This will also delete all associated questions.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form id="deleteForm" method="post" action="/ProgrammingTest/Delete">
                        <input type="hidden" id="testIdToDelete" name="id" value="" />
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Handle delete modal
            $('#deleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var testId = button.data('test-id');
                var testName = button.data('test-name');
                
                $('#testIdToDelete').val(testId);
                $('#testNameToDelete').text(testName);
            });
            
            // Auto-dismiss alerts after 5 seconds
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        });
    </script>
</body>
</html>

@functions {
    private string GetLanguageBadgeColor(string language)
    {
        switch (language?.ToLower())
        {
            case "visual basic":
                return "secondary";
            case "html/css":
                return "danger";
            case "python":
                return "primary";
            case "javascript":
                return "warning";
            case "php":
                return "info";
            case "c":
                return "dark";
            case "c#":
                return "success";
            default:
                return "secondary";
        }
    }
    
    private string GetLanguageIcon(string language)
    {
        switch (language?.ToLower())
        {
            case "visual basic":
                return "fab fa-microsoft";
            case "html/css":
                return "fab fa-html5";
            case "python":
                return "fab fa-python";
            case "javascript":
                return "fab fa-js";
            case "php":
                return "fab fa-php";
            case "c":
                return "fas fa-code";
            case "c#":
                return "fab fa-microsoft";
            default:
                return "fas fa-code";
        }
    }
} 